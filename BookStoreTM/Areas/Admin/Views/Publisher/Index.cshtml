@* @addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@model IEnumerable<BookStoreTM.Models.News>
 *@

@model X.PagedList.IPagedList<BookStoreTM.Models.Publisher>
@using X.PagedList.Mvc.Core;
@{
    ViewData["Title"] = "Nhà xuất bản";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}

<section class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1>Quản Lý Nhà xuất bản</h1>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="#">Trang chủ</a></li>
                    <li class="breadcrumb-item active">@ViewBag.Title</li>
                </ol>
            </div>
        </div>
    </div><!-- /.container-fluid -->
</section>

<!-- Main content -->
<section class="content">
    <div class="card">
        <div class="card-header">
            <h3 class="card-title" style="margin-top: 0.5rem;"> @ViewBag.Title </h3>
            <div class="row card-tools">
                <form action="" method="get" class="form-inline">
                    <div class="form-group">
                        <label class="sr-only" for="keyword">Tìm theo tên loại</label>
                        <input class="form-control" name="name" id="keyword" placeholder="Nhập tên cần tìm" value="@ViewBag.keyword">
                    </div>
                    <button type="submit" class="btn btn-default mr-1"><i class="fas fa-search"></i></button>
                </form>
                <div>
                    <a href="/admin/publisher/ThemNXB" class="btn btn-info">Thêm mới  </a>
                    @* <a href="#" class="btn btn-danger btnDelete" id="BtnDeleteAll">Xóa</a> *@
                </div>

            </div>
        </div>
        <div class="card-body">
            <table class="table table-hover table-bordered">
                <thead>
                    <tr>
                        <th style="width: 56px;">STT</th>
                        <th>Tên nhà xuất bản</th>
                        <th>Email</th>
                        <th style="width: 80px;">Tác vụ</th>
                        @* <th style="width: 80px;"><input type="checkbox" id="SelectAll" /></th> *@
                    </tr>
                </thead>
                <tbody>
                    @if (Model != null && Model.Any())
                    {
                        var i = 1;
                        foreach (var item in Model)
                        {
                            <tr id="trow_@item.PublisherId">
                                <td>@i</td>
                                <td>@item.PublisherName</td>
                                <td>@item.Email</td>
                                <td class="d-flex">
                                    <a asp-action="SuaNXB" asp-route-model="@item.PublisherId" class="btn-sm btn-info"><i class="fa-solid fa-circle-info"></i></a>
                                    <a asp-action="SuaNXB" asp-route-model="@item.PublisherId" class="btn-sm btn-info"><i class="fa-solid fa-pen-to-square"></i></a>
                                    <a class="btn-sm btn-info btn-delete" data-id="@item.PublisherId"><i class="fa-solid fa-trash-can"></i></a>
                                </td>
                                @* <td><input type="checkbox" class="cbkItem" value="@item.PublisherId" /></td> *@
                            </tr>
                            i++;
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="4">Không có bản ghi nào </td>
                        </tr>
                    }
                </tbody>
            </table>

            <div class="clearfix" style="margin-top: 2rem;">
                <ul class="pagination pagination-sm m-0 float-right">
                    @Html.PagedListPager(Model, page => Url.Action("index", new { page = page }), new PagedListRenderOptions
               {
                   LiElementClasses = new string[] { "page-item" },
                   PageClasses = new string[] { "page-link" }
               })
                </ul>
            </div>
        </div>
    </div>

</section>


@section scripts {
    <script>
        $(document).ready(function () {
            $('.btn-delete').on('click', function (e) {
                e.preventDefault(); 
                var id = $(this).data('id');
                var deleteUrl = '/admin/Publisher/delete';

                const swalWithBootstrapButtons = Swal.mixin({
                    customClass: {
                        confirmButton: "btn btn-success",
                        cancelButton: "btn btn-danger"
                    },
                    buttonsStyling: false
                });

                swalWithBootstrapButtons.fire({
                    title: "Bạn có chắc muốn xoá bản ghi?",
                    showCancelButton: true,
                    confirmButtonText: "Xoá",
                    cancelButtonText: "Không",
                    reverseButtons: true
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            url: deleteUrl, 
                            type: 'POST',
                            data: { id: id },
                            success: function (response) {
                                if (response.success) {
                                    swalWithBootstrapButtons.fire({
                                        text: "Bạn đã xoá thành công!",
                                        icon: "success"
                                    }).then(() => {
                                        location.reload(); 
                                    });
                                } else {
                                    swalWithBootstrapButtons.fire({
                                        title: "Bản ghi đã được sử dụng!",
                                        text: "Bạn không thể xoá bản ghi.",
                                        icon: "error"
                                    });
                                }
                            },
                            // error: function () {
                            //     swalWithBootstrapButtons.fire({
                            //         title: "Error!",
                            //         text: "An error occurred while deleting your item.",
                            //         icon: "error"
                            //     });
                            // }
                        });
                    } 
                    // else if (result.dismiss === Swal.DismissReason.cancel) {
                    //     swalWithBootstrapButtons.fire({
                    //         title: "Cancelled",
                    //         text: "Your item is safe :)",
                    //         icon: "error"
                    //     });
                    // }
                });
            });
        });
    </script>

    @* <script>
        $(document).ready(function () {
            $('.btn-delete').on('click', function (e) {
                e.preventDefault();
                var id = $(this).data('id'); // Lấy giá trị data-id từ thẻ a
                var deleteUrl = '/admin/Publisher/delete'; // Thay 'ControllerName' bằng tên controller thực tế

                if (confirm('Bạn có chắc chắn muốn xoá sản phẩm này?')) {
                    $.ajax({
                        url: deleteUrl, // URL của action trong controller
                        type: 'POST',
                        data: { id: id },
                        success: function (response) {
                            if (response.success) {
                                alert('Xoá thành công!');
                                // Code để cập nhật lại giao diện hoặc xoá dòng tương ứng nếu cần
                                location.reload(); // Hoặc dùng $(this).closest('tr').remove(); để xoá dòng tương ứng nếu dùng trong bảng
                            } else {
                                alert('Xoá thất bại!');
                            }
                        },
                        error: function () {
                            alert('Có lỗi xảy ra trong quá trình xoá!');
                        }
                    });
                }
            });
        });
    </script> *@
   @*  <script>
        $(document).ready(function () {
            //xoá bản ghi
            $('body').on('click', '.btnDelete', function () {

                var id = $(this).data("id");
                var conf = confirm("Bạn có muốn xóa không ")
                if (conf == true) {
                    $.ajax(
                        {
                            url: '/admin/Publisher/delete',
                            type: 'POST',
                            data: { id: id },
                            success: function (rs) {
                                if (rs.success) {
                                    $('#trow_' + id).remove();
                                }
                            }
                        }
                    )
                }

            });

            //chọn nhều bản ghi cùng lúc
            $('body').on('change', '#SelectAll', function () {
                var checkStatus = this.checked;
                var checkbox = $(this).parents('.card-body').find('tr td input:checkbox');
                checkbox.each(function () {
                    this.checked = checkStatus;
                    if (this.checked) {
                        checkbox.attr('selected', 'checked');
                    } else {
                        checkbox.attr('selected', '');
                    }
                });
            });

            //xoá nhiều bản ghi cùng lúc
            $('body').on('click', '#BtnDeleteAll', function (e) {
                e.preventDefault();
                var str = "";
                var checkbox = $(this).parents('.card').find('tr td input:checkbox');
                var i = 0;
                checkbox.each(function () {
                    if (this.checked) {
                        var _id = $(this).val();
                        if (i === 0) {
                            str += _id;
                        } else {
                            str += "," + _id;
                        }
                        i++;
                    } else {
                        checkbox.attr('selected', '');
                    }
                });
                if (str.length > 0) {
                    var conf = confirm('Bạn có muốn xóa các bản ghi này hay không?');
                    if (conf === true) {
                        $.ajax({
                            url: '/admin/Publisher/deleteAll',
                            type: 'POST',
                            data: { ids: str },
                            success: function (rs) {
                                if (rs.success) {
                                    location.reload();
                                }
                            }
                        });
                    }
                }
            });
        });
    </script> *@
}





